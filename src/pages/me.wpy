<style lang="less">
    .me {
        position: relative;
        overflow: hidden;
        .bg {
            width: 100%;
            height: 335rpx;
            position: absolute;
            top: 0;
        }
        .info-wrapper {
            margin-top: 150rpx;
            padding: 40rpx;
            .info {
                width: 100%;
                height: 220rpx;
                background: #ffffff;
                border-radius: 10rpx;
                box-shadow: 0px 0px 10px 0px #A3A2A5;
                position: relative;
                .logo {
                    width: 120rpx;
                    height: 120rpx;
                    border-radius: 50%;
                    border: 4rpx solid #ffffff;
                    overflow: hidden;
                    position: absolute;
                    top: -60rpx;
                    left: 50%;
                    margin-left: -60rpx;
                    image {
                        width: 100%;
                        height: 120rpx;
                    }
                }
                .name {
                    position: relative;
                    text-align: center;
                    top: 100rpx;
                    font-size: 36rpx;
                    color: #3f4954;
                }
            }

        }
        .nav-wrapper {
            margin-top: 40rpx;
            padding: 30rpx;
            .nav {
                display: flex;
                border-radius: 10rpx;
                box-shadow: 0px 0px 10px 0px #A3A2A5;
                .item {
                    padding: 30rpx;
                    flex: 1;
                    image {
                        display: block;
                        width: 65rpx;
                        height: 65rpx;
                        margin: 0 auto;
                    }
                    .title {
                        margin-top: 30rpx;
                        font-size: 24rpx;
                        text-align: center;
                    }
                }
            }
        }
    }
</style>
<template>
    <view class="me">
        <image class="bg" src="../img/me-bg.png"></image>

        <view class="info-wrapper">
            <view class="info">
                <view class="logo">
                    <image src="{{userInfo.avatarUrl}}"></image>
                </view>
                <view class="name">{{userInfo.nickName}}</view>
            </view>
        </view>
        <view class="nav-wrapper">
            <button open-type="getPhoneNumber" bindgetphonenumber="getPhoneNumber">获取手机号</button>
            <view class="nav">
                <view class="golden item">
                    <navigator url="../pages/money?gold={{goldBeans}}" open-type="navigate" hover-class="other-navigator-hover">
                    <image src="../img/sgold.png"></image>
                    <view class="title">
                        我的金豆
                    </view>
                    </navigator>
                </view>
                <view class="always item">
                    <navigator url="../pages/resident" open-type="navigate" hover-class="other-navigator-hover">
                        <image src="../img/concat.png"></image>
                        <view class="title">
                           常住人信息
                        </view>
                    </navigator>
                </view>
                <view class="orders item">
                    <navigator url="../pages/money?gold={{goldBeans}}" open-type="navigate" hover-class="other-navigator-hover">
                        <image src="../img/order.png"></image>
                        <view class="title">
                           我的订单
                        </view>
                    </navigator>
                </view>
            </view>
        </view>
    </view>
</template>
<script>
    import wepy from 'wepy'
    import Api from '../utils/api'
    export default class Me extends wepy.page {
        config = {
            navigationBarTitleText: '个人中心'
        }
        components = {
            
        }
        data = {
            userInfo: {},
            goldBeans: 0
        }
        methods = {
            getPhoneNumber (e) {   
                console.log(e.detail.errMsg)   
                console.log(e.detail.iv)   
                console.log(e.detail.encryptedData)   
                if (e.detail.errMsg == 'getPhoneNumber:fail user deny'){  
                  wx.showModal({  
                      title: '提示',  
                      showCancel: false,  
                      content: '未授权',  
                      success: function (res) { }  
                  })  
                } else {  
                  wx.showModal({  
                      title: '提示',  
                      showCancel: false,  
                      content: '同意授权',  
                      async success () {
                         let params = {
                            method: 'POST',
                            data: {
                                openId: 'ozHS35WBom3ZJjMu0i_x5SSXWi9Q',
                                encryptedData: e.detail.encryptedData,
                                iv: e.detail.iv
                            }
                            
                         }
                         let phoneInfo = await Api.getPhone(params)
                         console.log(phoneInfo, '8888')
                      }  
                  })  
                }  
            }
        }
        async onLoad () {
            let loginInfo = await wepy.login()
            let code = loginInfo.code
            
            let userInfo = await wepy.getUserInfo()
            
            this.userInfo = userInfo.userInfo
            
            let param = {
                method: 'POST',
                data: {
                    code: code
                },
                query: {
                    id: 'wxdf0a4eff9ba24e02'
                }
            }
            let openInfo = await Api.openid(param)
            
            console.log(openInfo, '*****')
            this.openid = openInfo.data.data.openid

            this.$apply()
        }
        async onShow () {
            
        }
    }
</script>